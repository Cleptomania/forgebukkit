package com.gtnewhorizons.forgebukkit.core;

import java.util.List;
import java.util.Map;
import java.util.Set;

import com.gtnewhorizon.gtnhlib.mixin.IMixins;
import com.gtnewhorizon.gtnhmixins.IEarlyMixinLoader;
import com.gtnewhorizons.forgebukkit.mixins.Mixins;

import cpw.mods.fml.common.DummyModContainer;
import cpw.mods.fml.common.ModMetadata;
import cpw.mods.fml.relauncher.IFMLLoadingPlugin;

import com.gtnewhorizons.forgebukkit.Tags;

@IFMLLoadingPlugin.MCVersion("1.7.10")
public class ForgeBukkitCore extends DummyModContainer implements IFMLLoadingPlugin, IEarlyMixinLoader {

    public static final String[] DEFAULT_TRANSFORMERS = new String[] {};

    public ForgeBukkitCore() {
        super(new ModMetadata());
        ModMetadata md = getMetadata();
        md.autogenerated = true;
        md.modId = md.name = "ForgeBukkit Core";
        md.parent = "forgebukkit";
        md.version = Tags.VERSION;
    }

    @Override
    public String[] getASMTransformerClass() {
        return new String[] {};
    }

    @Override
    public String getModContainerClass() {
        return "com.gtnewhorizons.forgebukkit.core.ForgeBukkitCore";
    }

    @Override
    public String getSetupClass() {
        return null;
    }

    @Override
    public void injectData(Map<String, Object> data) {}

    @Override
    public String getAccessTransformerClass() {
        return null;
    }

    @Override
    public String getMixinConfig() {
        return "mixins.forgebukkit.early.json";
    }

    @Override
    public List<String> getMixins(Set<String> loadedCoreMods) {
        return IMixins.getEarlyMixins(Mixins.class, loadedCoreMods);
    }
}
